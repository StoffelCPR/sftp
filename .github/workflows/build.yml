name: build

on:
  schedule:
    - cron: "0 12 * * *"
  push:
    paths-ignore:
      - "*.md"
      - "*.txt"
      - "*.png"
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # for proper signature verification
          submodules: true # for shunit2

      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master
        with:
          ignore: tests/shunit2
      
      - name: Docker metadata
        id: meta-debian
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.actor }}/${{ github.event.repository.name }}
            stoffel2107/${{ github.event.repository.name }}
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=debian
      
      - name: Docker metadata
        id: meta-alpine
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.actor }}/${{ github.event.repository.name }}
            stoffel2107/${{ github.event.repository.name }}
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}},suffix=-alpine
            type=raw,value=alpine

      # QEMU is needeed for multi-arch build
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      # Buildx is the tool used for multi-arch build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      # note: you should use ghcr.io instead of docker.pkg.github.com because the latest is in depreciation
      # however i'm not able to get it to work reliably and it's still in beta
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build docker image single platform for the tests
      - name: Build debian image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: false # don't push to registry
          load: true # load the final result in the docker machine. note this does'nt (yet) work with multiple platforms defined.
          cache-from: ${{ steps.meta-debian.outputs.tags }}
          tags: ${{ steps.meta-debian.outputs.tags }}

          labels: ${{ steps.meta-debian.outputs.labels }}
      - name: Test debian image
        run: tests/run ghcr.io/stoffelcpr/${{ github.event.repository.name }}:debian

      # Build docker image single platform for the tests
      - name: Build alpine image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile-alpine
          push: false # don't push to registry
          load: true # load the final result in the docker machine. note this does'nt (yet) work with multiple platforms defined.
          cache-from: ${{ steps.meta-alpine.outputs.tags }}
          tags: ${{ steps.meta-alpine.outputs.tags }}
 
          labels: ${{ steps.meta-alpine.outputs.labels }}

      - name: Test alpine image
        run: tests/run ghcr.io/stoffelcpr/${{ github.event.repository.name }}:alpine

      - name: Verify signature
        if: github.ref == 'refs/heads/master'
        uses: atmoz/git-verify-ref@master
        with:
          import-github-users: StoffelCPR

      # Build & push docker image multi-platform
      # note: the linux/amd64 image is not rebuilt, the cache is still present from the previous steps.
      - name: Build & Push debian image
        if: github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: |
            linux/386
            linux/amd64
            linux/arm/v6
            linux/arm/v7
            linux/arm64
            linux/ppc64le
            linux/s390x
          push: true # push to registry
          cache-from: ${{ steps.meta-debian.outputs.tags }}
          tags: ${{ steps.meta-debian.outputs.tags }}

          labels: ${{ steps.meta-debian.outputs.labels }}

      # Build & push docker image multi-platform
      - name: Build & Push alpine image
        if: github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile-alpine
          platforms: |
            linux/386
            linux/amd64
            linux/arm/v6
            linux/arm/v7
            linux/arm64
            linux/ppc64le
            linux/s390x
          push: true # push to registry
          cache-from: ${{ steps.meta-alpine.outputs.tags }}
          tags: ${{ steps.meta-alpine.outputs.tags }}

          labels: ${{ steps.meta-alpine.outputs.labels }}
    
